package peliasetusrekisteri.test;
// Generated by ComTest BEGIN
import peliasetusrekisteri.*;
import java.io.File;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.08.01 04:35:22 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ProfiilitTest {



  // Generated by ComTest BEGIN
  /** testLisaa37 */
  @Test
  public void testLisaa37() {    // Profiilit: 37
    Profiilit profiilit = new Profiilit(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(); 
    assertEquals("From: Profiilit line: 40", 0, profiilit.getLkm()); 
    profiilit.lisaa(allu1); assertEquals("From: Profiilit line: 41", 1, profiilit.getLkm()); 
    profiilit.lisaa(allu2); assertEquals("From: Profiilit line: 42", 2, profiilit.getLkm()); 
    profiilit.lisaa(allu1); assertEquals("From: Profiilit line: 43", 3, profiilit.getLkm()); 
    assertEquals("From: Profiilit line: 44", allu1, profiilit.anna(0)); 
    assertEquals("From: Profiilit line: 45", allu2, profiilit.anna(1)); 
    assertEquals("From: Profiilit line: 46", allu1, profiilit.anna(2)); 
    assertEquals("From: Profiilit line: 47", false, profiilit.anna(1) == allu1); 
    assertEquals("From: Profiilit line: 48", true, profiilit.anna(1) == allu2); 
    try {
    assertEquals("From: Profiilit line: 49", allu1, profiilit.anna(3)); 
    fail("Profiilit: 49 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    profiilit.lisaa(allu1); assertEquals("From: Profiilit line: 50", 4, profiilit.getLkm()); 
    profiilit.lisaa(allu1); assertEquals("From: Profiilit line: 51", 5, profiilit.getLkm()); 
    profiilit.lisaa(allu1); assertEquals("From: Profiilit line: 52", 6, profiilit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa74 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa74() throws CloneNotSupportedException {    // Profiilit: 74
    Profiilit profiilit = new Profiilit(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); 
    assertEquals("From: Profiilit line: 80", 0, profiilit.getLkm()); 
    profiilit.korvaaTaiLisaa(allu1); assertEquals("From: Profiilit line: 81", 1, profiilit.getLkm()); 
    profiilit.korvaaTaiLisaa(allu2); assertEquals("From: Profiilit line: 82", 2, profiilit.getLkm()); 
    Profiili allu3 = allu1.clone(); 
    allu3.setJoukkue(2); 
    Iterator<Profiili> it = profiilit.iterator(); 
    assertEquals("From: Profiilit line: 86", true, it.next() == allu1); 
    profiilit.korvaaTaiLisaa(allu3); assertEquals("From: Profiilit line: 87", 2, profiilit.getLkm()); 
    it = profiilit.iterator(); 
    Profiili j0 = it.next(); 
    assertEquals("From: Profiilit line: 90", allu3, j0); 
    assertEquals("From: Profiilit line: 91", true, j0 == allu3); 
    assertEquals("From: Profiilit line: 92", false, j0 == allu1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista127 
   * @throws SailoException when error
   */
  @Test
  public void testPoista127() throws SailoException {    // Profiilit: 127
    Profiilit profiilit = new Profiilit(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(), allu3 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); allu3.rekisteroi(); 
    int id1 = allu1.getTunnusNro(); 
    profiilit.lisaa(allu1); profiilit.lisaa(allu2); profiilit.lisaa(allu3); 
    assertEquals("From: Profiilit line: 134", 1, profiilit.poista(id1+1)); 
    assertEquals("From: Profiilit line: 135", 1, profiilit.poista(id1)); assertEquals("From: Profiilit line: 135", 1, profiilit.getLkm()); 
    assertEquals("From: Profiilit line: 136", 0, profiilit.poista(id1+3)); assertEquals("From: Profiilit line: 136", 1, profiilit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta155 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta155() throws SailoException {    // Profiilit: 155
    Profiilit profiilit = new Profiilit(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(); 
    allu1.taytaAlluTiedoilla(); 
    allu2.taytaAlluTiedoilla(); 
    File tied = new File("profiilit.dat"); 
    tied.delete(); 
    try {
    profiilit.lueTiedostosta(); 
    fail("Profiilit: 165 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    profiilit.lisaa(allu1); 
    profiilit.lisaa(allu2); 
    profiilit.tallenna(); 
    profiilit = new Profiilit();  // Poistetaan vanhat luomalla uusi
    profiilit.lueTiedostosta();  // johon ladataan tiedot tiedostosta.
    Iterator<Profiili> i = profiilit.iterator(); 
    assertEquals("From: Profiilit line: 172", allu1, i.next()); 
    assertEquals("From: Profiilit line: 173", allu2, i.next()); 
    assertEquals("From: Profiilit line: 174", false, i.hasNext()); 
    profiilit.lisaa(allu2); 
    profiilit.tallenna(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testProfiilitIterator264 
   * @throws SailoException when error
   */
  @Test
  public void testProfiilitIterator264() throws SailoException {    // Profiilit: 264
    Profiilit profiilit = new Profiilit(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); 
    profiilit.lisaa(allu1); 
    profiilit.lisaa(allu2); 
    profiilit.lisaa(allu1); 
    StringBuilder ids = new StringBuilder(30); 
    for (Profiili profiili:profiilit) // Kokeillaan for-silmukan toimintaa
    ids.append(" "+profiili.getTunnusNro()); 
    String tulos = " " + allu1.getTunnusNro() + " " + allu2.getTunnusNro() + " " + allu1.getTunnusNro(); 
    assertEquals("From: Profiilit line: 283", tulos, ids.toString()); 
    ids = new StringBuilder(30); 
    for (Iterator<Profiili>  i=profiilit.iterator(); i.hasNext(); ) { // ja iteraattorin toimintaa
    Profiili profiili = i.next(); 
    ids.append(" "+profiili.getTunnusNro()); 
    }
    assertEquals("From: Profiilit line: 291", tulos, ids.toString()); 
    Iterator<Profiili>  i=profiilit.iterator(); 
    assertEquals("From: Profiilit line: 294", true, i.next() == allu1); 
    assertEquals("From: Profiilit line: 295", true, i.next() == allu2); 
    assertEquals("From: Profiilit line: 296", true, i.next() == allu1); 
    try {
    i.next(); 
    fail("Profiilit: 298 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi358 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi358() throws SailoException {    // Profiilit: 358
    Profiilit profiilit = new Profiilit(); 
    Profiili pro1= new Profiili(); pro1.parse("1|s1mple|1|3.09"); 
    Profiili pro2 = new Profiili(); pro2.parse("2|allu|2|3.3"); 
    Profiili pro4 = new Profiili(); pro4.parse("4|ropz|3|1.77"); 
    Profiili pro5 = new Profiili(); pro5.parse("5|Jamppi|2|1.25"); 
    profiilit.lisaa(pro1); profiilit.lisaa(pro2); profiilit.lisaa(pro4); profiilit.lisaa(pro5); 
    List<Profiili> loytyneet; 
    loytyneet = (List<Profiili>)profiilit.etsi("*s*",0); 
    assertEquals("From: Profiilit line: 368", 1, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiId389 
   * @throws SailoException when error
   */
  @Test
  public void testEtsiId389() throws SailoException {    // Profiilit: 389
    Profiilit profiilit = new Profiilit(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(), allu3 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); allu3.rekisteroi(); 
    int id1 = allu1.getTunnusNro(); 
    profiilit.lisaa(allu1); profiilit.lisaa(allu2); profiilit.lisaa(allu3); 
    assertEquals("From: Profiilit line: 396", 1, profiilit.etsiId(id1+1)); 
    assertEquals("From: Profiilit line: 397", 2, profiilit.etsiId(id1+2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEdpiKa411 */
  @Test
  public void testEdpiKa411() {    // Profiilit: 411
    Profiilit profiilit = new Profiilit(); 
    Profiili pro1= new Profiili(); pro1.parse("1|s1mple|1|3.09|400"); 
    Profiili pro2 = new Profiili(); pro2.parse("2|allu|2|3.3|400"); 
    profiilit.lisaa(pro1); pro1.setEdpi(); assertEquals("From: Profiilit line: 415", 1236, profiilit.edpiKa(), 0.000001); 
    profiilit.lisaa(pro2); pro2.setEdpi(); assertEquals("From: Profiilit line: 416", 1278, profiilit.edpiKa(), 0.000001); 
  } // Generated by ComTest END
}