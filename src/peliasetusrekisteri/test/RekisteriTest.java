package peliasetusrekisteri.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import peliasetusrekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.07.10 17:46:30 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class RekisteriTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa22 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa22() throws SailoException {    // Rekisteri: 22
    Rekisteri rekisteri = new Rekisteri(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); 
    assertEquals("From: Rekisteri line: 27", 0, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 28", 1, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu2); assertEquals("From: Rekisteri line: 29", 2, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 30", 3, rekisteri.getProfiileja()); 
    assertEquals("From: Rekisteri line: 31", allu1, rekisteri.annaProfiili(0)); 
    assertEquals("From: Rekisteri line: 32", allu2, rekisteri.annaProfiili(1)); 
    assertEquals("From: Rekisteri line: 33", allu1, rekisteri.annaProfiili(2)); 
    try {
    assertEquals("From: Rekisteri line: 34", allu1, rekisteri.annaProfiili(3)); 
    fail("Rekisteri: 34 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 35", 4, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 36", 5, rekisteri.getProfiileja()); 
    try {
    rekisteri.lisaa(allu1); 
    fail("Rekisteri: 37 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaJoukkue110 */
  @Test
  public void testAnnaJoukkue110() {    // Rekisteri: 110
    Rekisteri rekisteri = new Rekisteri(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(), allu3 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); allu3.rekisteroi(); 
    Joukkue ence1 = new Joukkue("ence1"); rekisteri.lisaa(ence1); 
    Joukkue ence2 = new Joukkue("ence2"); rekisteri.lisaa(ence2); 
    rekisteri.asetaJoukkue(allu1, ence1); 
    assertEquals("From: Rekisteri line: 119", ence1, rekisteri.annaJoukkue(allu1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaProfiilit133 */
  @Test
  public void testAnnaProfiilit133() {    // Rekisteri: 133
    Rekisteri rekisteri = new Rekisteri(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(), allu3 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); allu3.rekisteroi(); 
    Joukkue ence1 = new Joukkue("ence1"); rekisteri.lisaa(ence1); 
    Joukkue ence2 = new Joukkue("ence2"); rekisteri.lisaa(ence2); 
    rekisteri.asetaJoukkue(allu1, ence1); 
    rekisteri.asetaJoukkue(allu2, ence1); 
    List<Profiili> loytyneet; 
    loytyneet = rekisteri.annaProfiilit(ence2); 
    assertEquals("From: Rekisteri line: 147", 0, loytyneet.size()); 
    rekisteri.asetaJoukkue(allu3, ence2); 
    loytyneet = rekisteri.annaProfiilit(ence2); 
    assertEquals("From: Rekisteri line: 150", 1, loytyneet.size()); 
    assertEquals("From: Rekisteri line: 151", true, loytyneet.get(0) == allu3); 
    loytyneet = rekisteri.annaProfiilit(ence1); 
    assertEquals("From: Rekisteri line: 153", 2, loytyneet.size()); 
    assertEquals("From: Rekisteri line: 154", true, loytyneet.get(0) == allu1); 
  } // Generated by ComTest END
}