package peliasetusrekisteri.test;
// Generated by ComTest BEGIN
import peliasetusrekisteri.SailoException;
import java.util.*;
import java.io.*;
import static org.junit.Assert.*;
import org.junit.*;
import peliasetusrekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.08.03 16:58:39 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class RekisteriTest {


  // Generated by ComTest BEGIN  // Rekisteri: 16
   private Rekisteri rekisteri; 
   private Profiili allu1; 
   private Profiili allu2; 
   private int pid1; 
   private int pid2; 
   private Joukkue ence1; 
   private Joukkue ence2; 
   private Joukkue ence3; 

   public void alustaRekisteri() {
     rekisteri = new Rekisteri(); 
     allu1 = new Profiili(); allu1.taytaAlluTiedoilla(); allu1.rekisteroi(); 
     allu2 = new Profiili(); allu2.taytaAlluTiedoilla(); allu2.rekisteroi(); 
     pid1 = allu1.getTunnusNro(); 
     pid2 = allu2.getTunnusNro(); 
     ence1 = new Joukkue("ence1"); 
     ence2 = new Joukkue("ence2"); 
     ence3 = new Joukkue("ence3"); 
     try {
     rekisteri.lisaa(allu1); 
     rekisteri.lisaa(allu2); 
     rekisteri.lisaa(ence1); 
     rekisteri.lisaa(ence2); 
     rekisteri.lisaa(ence3); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }

  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa57 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa57() throws SailoException {    // Rekisteri: 57
    Rekisteri rekisteri = new Rekisteri(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); 
    assertEquals("From: Rekisteri line: 62", 0, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 63", 1, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu2); assertEquals("From: Rekisteri line: 64", 2, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 65", 3, rekisteri.getProfiileja()); 
    assertEquals("From: Rekisteri line: 66", allu1, rekisteri.annaProfiili(0)); 
    assertEquals("From: Rekisteri line: 67", allu2, rekisteri.annaProfiili(1)); 
    assertEquals("From: Rekisteri line: 68", allu1, rekisteri.annaProfiili(2)); 
    try {
    assertEquals("From: Rekisteri line: 69", allu1, rekisteri.annaProfiili(3)); 
    fail("Rekisteri: 69 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 70", 4, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); assertEquals("From: Rekisteri line: 71", 5, rekisteri.getProfiileja()); 
    rekisteri.lisaa(allu1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa85 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa85() throws SailoException {    // Rekisteri: 85
    alustaRekisteri(); 
    assertEquals("From: Rekisteri line: 88", 2, rekisteri.etsi("*",0).size()); 
    rekisteri.korvaaTaiLisaa(allu1); 
    assertEquals("From: Rekisteri line: 90", 2, rekisteri.etsi("*",0).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista152 
   * @throws Exception when error
   */
  @Test
  public void testPoista152() throws Exception {    // Rekisteri: 152
    alustaRekisteri(); 
    assertEquals("From: Rekisteri line: 155", 2, rekisteri.etsi("*",1).size()); 
    assertEquals("From: Rekisteri line: 156", 1, rekisteri.poista(allu1)); 
    assertEquals("From: Rekisteri line: 157", 1, rekisteri.etsi("*",1).size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista172 
   * @throws Exception when error
   */
  @Test
  public void testPoista172() throws Exception {    // Rekisteri: 172
    alustaRekisteri(); 
    assertEquals("From: Rekisteri line: 175", 6, rekisteri.etsi("*").size()); 
    rekisteri.poista(ence1); 
    assertEquals("From: Rekisteri line: 177", 4, rekisteri.etsi("*").size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi192 
   * @throws CloneNotSupportedException when error
   * @throws SailoException when error
   */
  @Test
  public void testEtsi192() throws CloneNotSupportedException, SailoException {    // Rekisteri: 192
    alustaRekisteri(); 
    Profiili allu3 = new Profiili(); allu3.rekisteroi(); 
    allu3.setNimi("allu3"); 
    rekisteri.lisaa(allu3); 
    Collection<Profiili> loytyneet = rekisteri.etsi("*allu*",0); 
    assertEquals("From: Rekisteri line: 199", 3, loytyneet.size()); 
    Iterator<Profiili> it = loytyneet.iterator(); 
    assertEquals("From: Rekisteri line: 201", false, it.next() == allu2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaJoukkue245 */
  @Test
  public void testAnnaJoukkue245() {    // Rekisteri: 245
    Rekisteri rekisteri = new Rekisteri(); 
    Profiili allu1 = new Profiili(), allu2 = new Profiili(), allu3 = new Profiili(); 
    allu1.rekisteroi(); allu2.rekisteroi(); allu3.rekisteroi(); 
    Joukkue ence1 = new Joukkue("ence1"); rekisteri.lisaa(ence1); 
    Joukkue ence2 = new Joukkue("ence2"); rekisteri.lisaa(ence2); 
    rekisteri.setJoukkue(allu1, ence1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaJoukkue265 */
  @Test
  public void testAnnaJoukkue265() {    // Rekisteri: 265
    alustaRekisteri(); 
    assertEquals("From: Rekisteri line: 267", "ence1", rekisteri.annaJoukkue("ence1").getNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi281 
   * @throws Exception when error
   */
  @Test
  public void testEtsi281() throws Exception {    // Rekisteri: 281
    alustaRekisteri(); 
    assertEquals("From: Rekisteri line: 284", 6, rekisteri.etsi("*").size()); 
    rekisteri.poista(ence1); 
    assertEquals("From: Rekisteri line: 286", 4, rekisteri.etsi("*").size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta306 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta306() throws SailoException {    // Rekisteri: 306
    Rekisteri rekisteri = new Rekisteri(); 
    Profiili allu1 = new Profiili(); allu1.taytaAlluTiedoilla(); allu1.rekisteroi(); 
    Profiili allu2 = new Profiili(); allu2.taytaAlluTiedoilla(); allu2.rekisteroi(); 
    Joukkue ence1 = new Joukkue(); 
    Joukkue ence2 = new Joukkue(); 
    File ftied = new File("profiilit.dat"); 
    File fhtied = new File("joukkueet.dat"); 
    ftied.delete(); 
    fhtied.delete(); 
    try {
    rekisteri.lueTiedostosta(); 
    fail("Rekisteri: 322 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    rekisteri.lisaa(allu1); 
    rekisteri.lisaa(allu2); 
    rekisteri.lisaa(ence1); 
    rekisteri.lisaa(ence2); 
    rekisteri.tallenna(); 
    rekisteri = new Rekisteri(); 
    rekisteri.lueTiedostosta(); 
    Collection<Profiili> kaikki = rekisteri.etsi("",0); 
    Iterator<Profiili> it = kaikki.iterator(); 
    assertEquals("From: Rekisteri line: 332", true, it.hasNext()); 
    rekisteri.lisaa(allu2); 
    rekisteri.lisaa(ence2); 
    rekisteri.tallenna(); 
    assertEquals("From: Rekisteri line: 336", true, ftied.delete()); 
    assertEquals("From: Rekisteri line: 337", true, fhtied.delete()); 
  } // Generated by ComTest END
}